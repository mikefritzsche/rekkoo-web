version: 2.1

orbs:
  slack: circleci/slack@4.12.5

executors:
  node-docker:
    docker:
      - image: cimg/node:20.0
    resource_class: medium

commands:
  deploy:
    parameters:
      environment:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Set branch variables
          command: |
            # Sanitize branch name and save it for reuse
            SAFE_BRANCH_NAME=$(echo ${CIRCLE_BRANCH} | tr '/' '-' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]/-/g')
            echo "export SAFE_BRANCH_NAME=${SAFE_BRANCH_NAME}" >> $BASH_ENV
            source $BASH_ENV
            echo "Original branch: ${CIRCLE_BRANCH}"
            echo "Safe branch: ${SAFE_BRANCH_NAME}"
      - run:
          name: Build Docker image
          command: |
            echo "Building Docker image for << parameters.environment >>/${SAFE_BRANCH_NAME}..."
            # Use appropriate Dockerfile based on environment
            DOCKERFILE="Dockerfile"
            if [ "<< parameters.environment >>" = "staging" ]; then
              DOCKERFILE="Dockerfile.staging"
            elif [ "<< parameters.environment >>" = "dev" ]; then
              DOCKERFILE="Dockerfile.dev"
            fi
            echo "Using ${DOCKERFILE} for build..."
            
            # Build with environment-specific Dockerfile
            docker build -t rekkoo-app:${CIRCLE_SHA1} \
              --build-arg VITE_API_URL=${VITE_API_URL} \
              -f ${DOCKERFILE} .
            docker tag rekkoo-app:${CIRCLE_SHA1} rekkoo-app-<< parameters.environment >>-${SAFE_BRANCH_NAME}:latest
            
            # Verify build artifacts
            echo "Verifying build artifacts..."
            docker run --rm rekkoo-app:${CIRCLE_SHA1} ls -la /usr/share/nginx/html/assets || true
      - run:
          name: Save Docker image
          command: |
            echo "Saving Docker image..."
            mkdir -p /tmp/docker-images
            docker save rekkoo-app-<< parameters.environment >>-${SAFE_BRANCH_NAME}:latest | gzip > /tmp/docker-images/rekkoo-app.tar.gz
      - add_ssh_keys:
          fingerprints:
            - ${HETZNER_SSH_KEY_FINGERPRINT}
      - run:
          name: Deploy to Hetzner
          command: |
            # Set base directory
            BASE_DIR="/home/rekkoo/web"
            if [ "<< parameters.environment >>" = "prod" ]; then
              DEPLOY_DIR="${BASE_DIR}/prod"
            else
              # Create unique directory for each branch
              DEPLOY_DIR="${BASE_DIR}/<< parameters.environment >>/${SAFE_BRANCH_NAME}"
            fi

            echo "Starting deployment to ${DEPLOY_DIR}..."
            echo "Environment: << parameters.environment >>"
            echo "Branch: ${SAFE_BRANCH_NAME}"

            # Create deployment directory
            ssh -o StrictHostKeyChecking=no ${HETZNER_DEPLOY_USER}@${HETZNER_VPS_HOST} "
              mkdir -p ${DEPLOY_DIR}
            "

            # Copy only necessary files
            for file in $COMPOSE_FILES nginx.conf; do
              scp -o StrictHostKeyChecking=no \
                $file \
                ${HETZNER_DEPLOY_USER}@${HETZNER_VPS_HOST}:${DEPLOY_DIR}/
            done

            # Copy docker image
            scp -o StrictHostKeyChecking=no \
              /tmp/docker-images/rekkoo-app.tar.gz \
              ${HETZNER_DEPLOY_USER}@${HETZNER_VPS_HOST}:${DEPLOY_DIR}/

            # Deploy
            ssh -o StrictHostKeyChecking=no ${HETZNER_DEPLOY_USER}@${HETZNER_VPS_HOST} "
              cd ${DEPLOY_DIR} && \
              echo 'Loading Docker image...' && \
              gunzip -c rekkoo-app.tar.gz | docker load && \
              echo 'Creating .env file...' && \
              echo 'VITE_API_URL=${VITE_API_URL}' > .env && \
              echo 'Starting containers...' && \
              SAFE_BRANCH_NAME=${SAFE_BRANCH_NAME} \
              DEPLOY_ENV=<< parameters.environment >> \
              docker compose -f docker-compose.yml -f docker-compose.<< parameters.environment >>.yml up -d && \
              echo 'Cleaning up...' && \
              rm rekkoo-app.tar.gz && \
              echo 'Deployment completed for ${SAFE_BRANCH_NAME} to << parameters.environment >>'
            "
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

jobs:
  deploy-prod:
    executor: node-docker
    steps:
      - deploy:
          environment: prod

  deploy-staging:
    executor: node-docker
    steps:
      - deploy:
          environment: staging

  deploy-dev:
    executor: node-docker
    steps:
      - deploy:
          environment: dev

workflows:
  version: 2
  build-deploy:
    jobs:
      - deploy-prod:
          context:
            - hetzner-deploy-secrets
            - slack-secrets
            - rekkoo-secrets
          filters:
            branches:
              only: main
      - deploy-staging:
          context:
            - hetzner-deploy-secrets
            - slack-secrets
            - rekkoo-secrets
          filters:
            branches:
              ignore:
                - main
                - /.*dev.*/  # Ignore branches containing 'dev'
      - deploy-dev:
          context:
            - hetzner-deploy-secrets
            - slack-secrets
            - rekkoo-secrets
          filters:
            branches:
              only: /.*dev.*/  # Only run for branches containing 'dev'
