# .circleci/config.yml
version: 2.1

orbs:
  slack: circleci/slack@4.12.5

executors:
  node-docker:
    docker:
      - image: cimg/node:20.0
    resource_class: medium

jobs:
  build-and-deploy:
    executor: node-docker
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - add_ssh_keys:
          fingerprints:
            - ${HETZNER_SSH_KEY_FINGERPRINT}
      - run:
          name: Create production env file
          command: |
            echo "Creating .env file on remote server..."
            echo "VITE_API_URL=${VITE_API_URL}" | ssh -o StrictHostKeyChecking=no ${HETZNER_DEPLOY_USER}@${HETZNER_VPS_HOST} 'cat > /home/rekkoo/web/.env'
            echo ".env file created successfully"
      - run:
          name: Copy Docker Compose files
          command: |
            echo "Copying Docker Compose files..."
            # Ensure directory exists
            ssh -o StrictHostKeyChecking=no ${HETZNER_DEPLOY_USER}@${HETZNER_VPS_HOST} 'mkdir -p /home/rekkoo/web'
            
            # Copy the files
            scp -o StrictHostKeyChecking=no \
              docker-compose.yml \
              docker-compose.prod.yml \
              ${HETZNER_DEPLOY_USER}@${HETZNER_VPS_HOST}:/home/rekkoo/web/
            
            echo "Docker Compose files copied successfully"
      - run:
          name: Debug Deploy to Hetzner
          command: |
            echo "Starting deployment to Hetzner..."
            ssh -o StrictHostKeyChecking=no ${HETZNER_DEPLOY_USER}@${HETZNER_VPS_HOST} '
              set -x
              cd /home/rekkoo/web && \
              echo "Current directory: $(pwd)" && \
              echo "Listing directory contents:" && \
              ls -la && \
              echo "Pulling images..." && \
              docker compose -f docker-compose.yml -f docker-compose.prod.yml pull && \
              echo "Pull completed" && \
              echo "Starting containers..." && \
              docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d && \
              echo "Containers started" && \
              echo "Checking container status:" && \
              docker compose -f docker-compose.yml -f docker-compose.prod.yml ps
            '
            echo "Deployment completed"
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
      - slack/notify:
          event: fail
          template: basic_fail_1

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-and-deploy:
          context:
            - hetzner-deploy-secrets
            - slack-secrets
            - rekkoo-secrets
          filters:
            branches:
              only: main
